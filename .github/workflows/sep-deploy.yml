name: ci-cd
 
on:
  push:
    branches:
      - develop
      - qa
      - master
 
jobs:
  deploy-authoring-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
 
      - name: Set env vars (develop)
        if: endsWith(github.ref, '/develop')
        run: |
          echo "IMAGE_NAME=IMAGE_NAME_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
 
      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY_DEVELOP }}
          project_id: ${{ secrets.GKE_PROJECT_ID_DEVELOP }}
 
      - run: gcloud --quiet auth configure-docker
 
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME_DEVELOP }}
          location: ${{ secrets.GKE_ZONE_DEVELOP }}
          credentials: ${{ secrets.GKE_SA_KEY_DEVELOP }}
 
      - name: Install Nx CLI
        run: npm install -g @nrwl/nx
 
      - name: Build affected libraries and deploy authoring-web
        run: |
          nx affected --target=build --base=main --head=$GITHUB_SHA
          nx run authoring-web:deploy --namespace=${{ secrets.NAMESPACE_NAME_DEVELOP }}
 
  deploy-x-user-experience:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
 
      - name: Set Environment Variables
        run: |
          echo "IMAGE_NAME=IMAGE_NAME_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
 
      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY_DEVELOP }}
          project_id: ${{ secrets.GKE_PROJECT_ID_DEVELOP }}
 
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME_DEVELOP }}
          location: ${{ secrets.GKE_ZONE_DEVELOP }}
          credentials: ${{ secrets.GKE_SA_KEY_DEVELOP }}
 
      - name: Install Nx CLI
        run: npm install -g @nrwl/nx
 
      - name: Build affected libraries and deploy x-user-experience
        run: |
          nx affected --target=build --base=main --head=$GITHUB_SHA
          nx run x-user-experience:deploy --namespace=${{ secrets.NAMESPACE_NAME_DEVELOP }}
