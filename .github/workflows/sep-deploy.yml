name: ci-cd

on:
  push:
    branches:
      - develop
      - qa
      - master

jobs:
  deploy-authoring-web:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      #- name: Set Environment Variables
      - name: Set env vars (develop)
        if: endsWith(github.ref, '/develop')
        run: |
          #echo "CLUSTER_NAME=your-gke-cluster-name" >> $GITHUB_ENV
          #echo "NAMESPACE=x-user-experience-namespace" >> $GITHUB_ENV
          echo "IMAGE_NAME=IMAGE_NAME_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          # Add other environment variables as needed
      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          #service_account_key: ${{ secrets.GCP_CREDENTIALS_JSON }}
          #project_id: your-gcp-project-id
          service_account_key: ${{ secrets[env.GKE_SA_KEY_DEVELOP] }}
          project_id: ${{ secrets[env.PROJECT_ID_DEVELOP] }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
         gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          #cluster_name: ${{ secrets[env.GKE_CLUSTER_DEVELOP] }}
          #location: ${{ secrets[env.GKE_ZONE_DEVELOP] }}
          #credentials: ${{ secrets[env.GKE_SA_KEY_DEVELOP] }}
          cluster_name: platformx-dev
          location: us-central1-a
          credentials: ${{ secrets[env.GKE_SA_KEY_DEVELOP] }}


      #- name: Authenticate with GKE
      #  uses: google-github-actions/auth@v1.0.0
      #  with:
      #    workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      #    service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      #    token_format: 'access_token'

      - name: Install Nx CLI
        run: npm install -g @nrwl/nx

      - name: Build affected libraries and deploy authoring-web
        run: |
          nx affected --target=build --base=main --head=$GITHUB_SHA
          nx run authoring-web:deploy --namespace=${{ secrets[env.NAMESPACE_NAME_DEVELOP] }}

  deploy-x-user-experience:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Environment Variables
        run: |
          #echo "CLUSTER_NAME=your-gke-cluster-name" >> $GITHUB_ENV
          #echo "NAMESPACE=x-user-experience-namespace" >> $GITHUB_ENV
          echo "IMAGE_NAME=IMAGE_NAME_$(echo ${{ github.ref_name }} | tr  '[:lower:]' '[:upper:]')" >> $GITHUB_ENV
          # Add other environment variables as needed
      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          #service_account_key: ${{ secrets.GCP_CREDENTIALS_JSON }}
          #project_id: your-gcp-project-id
          service_account_key: ${{ secrets[env.GKE_SA_KEY_DEVELOP] }}
          project_id: ${{ secrets[env.PROJECT_ID_DEVELOP] }}

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.2.1
        with:
          #cluster_name: ${{ secrets[env.GKE_CLUSTER_DEVELOP] }}
          #location: ${{ secrets[env.GKE_ZONE_DEVELOP] }}
          #credentials: ${{ secrets[env.GKE_SA_KEY_DEVELOP] }}
          cluster_name: platformx-dev
          location: us-central1-a
          credentials: ${{ secrets[env.GKE_SA_KEY_DEVELOP] }}

      #- name: Authenticate with GKE
      #  uses: google-github-actions/auth@v1.0.0
      #  with:
      #    workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      #    service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      #    token_format: 'access_token'

      - name: Install Nx CLI
        run: npm install -g @nrwl/nx

      - name: Build affected libraries and deploy x-user-experience
        run: |
          nx affected --target=build --base=main --head=$GITHUB_SHA
          nx run x-user-experience:deploy --namespace=${{ secrets[env.NAMESPACE_NAME_DEVELOP] }}
